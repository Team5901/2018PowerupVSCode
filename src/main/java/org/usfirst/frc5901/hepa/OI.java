// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5901.hepa;

import org.usfirst.frc5901.hepa.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;

import org.usfirst.frc5901.hepa.subsystems.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton buttonB;
    public JoystickButton buttonA;
    public JoystickButton buttonY;
    public JoystickButton buttonX;
    public Joystick connieJS1;
    public JoystickButton f2ButtonB;
    public JoystickButton f2ButtonA;
    public JoystickButton f2ButtonX;
    public JoystickButton f2ButtonY;
    public Joystick cesilineFixJS2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
    	
    	SmartDashboard.putNumber("Position", 9);
    	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        cesilineFixJS2 = new Joystick(1);
        
        f2ButtonY = new JoystickButton(cesilineFixJS2, 4);
        f2ButtonY.whileHeld(new UpperArm());
        f2ButtonX = new JoystickButton(cesilineFixJS2, 1);
        f2ButtonX.whileHeld(new LowerArm());
        f2ButtonA = new JoystickButton(cesilineFixJS2, 2);
        f2ButtonA.whileHeld(new Squeeze());
        f2ButtonB = new JoystickButton(cesilineFixJS2, 3);
        f2ButtonB.whileHeld(new OpenArms());
        connieJS1 = new Joystick(0);
        
        buttonX = new JoystickButton(connieJS1, 3);
        buttonX.whileHeld(new AutoAim());
        buttonY = new JoystickButton(connieJS1, 4);
        buttonY.whileHeld(new ScaleHeight());
        buttonA = new JoystickButton(connieJS1, 1);
        buttonA.whileHeld(new GroundLevel());
        buttonB = new JoystickButton(connieJS1, 2);
        buttonB.whileHeld(new SwitchHeight());


        // SmartDashboard Buttons
        SmartDashboard.putData("HoldCube", new HoldCube());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        
        SmartDashboard.putNumber("Elevator Position", RobotMap.elevatorEbony1.getSelectedSensorPosition(0));
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getConnieJS1() {
        return connieJS1;
    }

    public Joystick getCesilineFixJS2() {
        return cesilineFixJS2;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    
    
    
}

